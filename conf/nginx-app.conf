upstream django {
    server 127.0.0.1:9090;
}

server {
    listen      80 default_server;
    server_name _;
    charset     utf-8;
    
    set $resp_body "";
    body_filter_by_lua_block {
    local resp_body = string.sub(ngx.arg[1], 1, 1000)
    ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
    if ngx.arg[2] then
      ngx.var.resp_body = ngx.ctx.buffered
    end
    }
    
    # max upload size
    client_max_body_size 2048m;


    location /static {
        alias /srv/omaha/omaha_server/static;
    }

    location / {
        uwsgi_pass  django;
        include     /srv/omaha/conf/uwsgi_params;
    }

    location /service/update2 {
        uwsgi_pass  django;
        include     /srv/omaha/conf/uwsgi_params;
        access_log /var/log/nginx/access.log body;
    }

    location /healthcheck/status/ {
        uwsgi_pass  django;
        include     /srv/omaha/conf/uwsgi_params;
        add_header Access-Control-Allow-Origin *;
    }

    location /api/downloads/ {
        uwsgi_pass  django;
        include     /srv/omaha/conf/uwsgi_params;
        add_header Access-Control-Allow-Origin "chrome://status";
        add_header 'Access-Control-Allow-Methods' 'GET';
        add_header 'Access-Control-Allow-Headers' 'Cache-Control,Content-Type';
    }

}
